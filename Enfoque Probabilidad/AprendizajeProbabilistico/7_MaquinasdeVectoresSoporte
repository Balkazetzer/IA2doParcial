from sklearn.svm import SVC
from sklearn.datasets import make_circles
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

# Generar datos de ejemplo
X, y = make_circles(n_samples=1000, noise=0.1, factor=0.5, random_state=42)

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear y entrenar el modelo SVM con núcleo RBF
svm = SVC(kernel='rbf', random_state=42)
svm.fit(X_train, y_train)

# Realizar predicciones
y_pred = svm.predict(X_test)

# Evaluar el modelo
accuracy = accuracy_score(y_test, y_pred)
print(f"Precisión del modelo SVM: {accuracy}")

# Graficar los resultados
plt.scatter(X[:, 0], X[:, 1], c=y, s=40, cmap='viridis')
plt.title('Clasificación con SVM')
plt.show()
