# Iteración de Valores
def iteracion_valores(estados, acciones, recompensas, transiciones, gamma=0.9, epsilon=1e-3):
    """
    Iteración de valores para encontrar la política óptima.
    :param estados: Lista de estados.
    :param acciones: Lista de acciones.
    :param recompensas: Diccionario de recompensas.
    :param transiciones: Diccionario de transiciones.
    :param gamma: Factor de descuento.
    :param epsilon: Umbral de convergencia.
    :return: Valores óptimos.
    """
    V = {s: 0 for s in estados}
    while True:
        delta = 0
        for s in estados:
            v = V[s]
            V[s] = max(sum(transiciones[(s, a)][sp] * (recompensas[(s, a, sp)] + gamma * V[sp]) for sp in estados) for a in acciones)
            delta = max(delta, abs(v - V[s]))
        if delta < epsilon:
            break
    return V

# Ejemplo de uso
estados = ['A', 'B']
acciones = ['1', '2']
recompensas = {('A', '1', 'B'): 10, ('A', '2', 'B'): 5, ('B', '1', 'A'): -1, ('B', '2', 'A'): 0}
transiciones = {('A', '1'): {'B': 1.0}, ('A', '2'): {'B': 1.0}, ('B', '1'): {'A': 1.0}, ('B', '2'): {'A': 1.0}}
valores = iteracion_valores(estados, acciones, recompensas, transiciones)
print(f"Valores óptimos: {valores}")
